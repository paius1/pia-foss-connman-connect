#!/opt/bin/bash
#    v 0.0.1
#    SCRIPTNAME  called by systemctl stop pia-wireguard.service
#                or by System.Exec in Favourites
#        
#        disconnects wireguard vpn
#        restores the firewall, nameservers, routing table, and stops port_forwarding.sh
#        
#        add any vpn sensitive applications e.g. stop transmission
#        at the end
#        
####
# c plgroves @ 2022

    _Usage() {
         sed >&2 -n "1d; /^###/q; /^#/!q; s/^#*//; s/^ //; 
                     s/SCRIPTNAME/${BASH_SOURCE##*/}/; p" \
                    "${BASH_SOURCE%/*}/${BASH_SOURCE##*/}"
         exit 1; }
    [[ "$1" =~ ^[-hH] ]] && _Usage "$@"

  # PIA's scripts are set to a relative path
    cd "${0%/*}" || exit 255

    export PATH=/opt/bin:/opt/sbin:/usr/bin:/usr/sbin #

  # add kodi GUI.Notifications with timeouts and images
  #     _pia_notify 'message' 'display time' 'image file' #
  # and logging function
  #     _logger 'message' [ logfile ]
    [[ -z "${kodi_user}" ]] \
      && source ./kodi_assets/functions #

  # running from favourites and a systemd service file exits then use systemd
  # 1) unit exists 2) not called by systemd, and 3) not running in a shell #
    if
    [[ -z "${PRE_UP_RUN+y}" ]] \
      && \
    [[ ! -t 0 && ! -n "${SSH_TTY}" ]] \
      && \
    [[ "$(systemctl list-unit-files pia-wireguard.service | wc -l)" -gt 3 ]] #
  # systemd service exists, not called, and we are running non-interactively  
    then systemd-cat -t pia-wireguard.favourites -p warning <<< "Stopping pia-wireguard.service from outside of systemd"
       # log this in pia-wireguard log #
         LOG=/tmp/pia-wireguard.log _logger 'Called outside of systemd. Service is '" $(systemctl is-active  pia-wireguard.service)"'' #

         systemctl stop pia-wireguard.service &
         exit 0
    elif
    [[ -t 0 || -n "${SSH_TTY}" ]] \
      && \
    [[ "$( wc -l < <(systemctl list-unit-files pia-wireguard.service))" -gt 3 ]] #
  # Running interactively with systemd service #
    then SERVICE_STATE="$(systemctl is-active  pia-wireguard.service)" #
         if [[ "${SERVICE_STATE}" =~ ^a ]] #
       # Service is running #
         then # notify systemd
              systemd-cat -t pia-wireguard.cmdline -p warning <<< "Stopping pia-wireguard.service from the command line" #
            # Stop pia-wireguard service This runs runs ./shutdown.sh with PRE_UP_RUN set #
              systemctl stop pia-wireguard.service & #
              exit 0
         else PRE_UP_RUN='cli'
       # clean up _logger messages
         fi
    fi

  # Get user defined iptables rules
    source .env 2>/dev/null

  # Disconnect VPN
  # First service is connected service, is it a vpn?
    wg_0="$(connmanctl services | awk 'NR == 1 && /vpn_/ {print $NF}')"
    if [[ -n "${wg_0}" ]]
  # Vpn active
    then _logger "$(connmanctl disconnect "${wg_0}")"
       # GUI Notification
         REGION="$(/opt/bin/jq -r '.name' < /opt/etc/piavpn-manual/regionData )"
         [[ ! -t 0 && ! -n "${SSH_TTY}" ]] \
           && _pia_notify 'Disconnected from '"${REGION}"' ' 5000 "pia_off_48x48.png"
    else _logger "No current vpn connection"
    fi

  # OKAY now iptables, DNS, route are all mangled?

  # restore firewall
  # user defined or ./openrules.v4
    iptables-restore < "${MY_FIREWALL:-openrules.v4}"
    _logger "restored the firewall to ${MY_FIREWALL:-openrules.v4}"

  # Check if we can dig it
    if ! dig +time=1 +tries=2 privateinternetaccess.com >/dev/null
  # No, restore valid nameservers
    then _logger "restoring DNS nameservers"
       # restore a sane DNS .cache/starting_resolv.conf is saved at startup
         if [ -f /storage/.cache/starting_resolv.conf ]
       # Using resolv.conf from start up
         then cat /storage/.cache/starting_resolv.conf > /etc/resolv.conf
         else #
       # Get nameservers from first active non vpn_ interface
                iface=$(connmanctl services | awk '/^\*/ && !/vpn_/{print $NF; exit}')
              # Nameserver definition from $iface/settings
                mapfile -d ' ' NS < <(awk -F'[=|;]' '/^Nameserver/{printf "%s", $2}' ~/.cache/connman/"${iface}"/settings)
              # or fall back to opendns
                nameserver="${NS[0]:-208.67. 222.222}"
    cat <<- EOF > /etc/resolv.conf
    # Generated by PIA WIREGUARD
    nameserver "${nameserver}"
EOF
         fi
    else _logger "Can resolve hostnames"
    fi

    pf_pids=($(pidof port_forwarding.sh))
    if [ "${#pf_pids[@]}" -ne 0 ]
  # stop port forwarding 
    then echo "${pf_pids[@]}" | xargs kill -9 >/dev/null 2>&1
         _logger "Stopped port forwarding"
       # clear the log file ?
         :> /tmp/port_forward.log
    fi

  # flush vpn from routing table?
    if [[ -n "${wg_0}" ]]
  # PIA was connected. if disconnected from settings this will be missed
    then # could try comparing original routing table
         ip_flush="$(sed 's/^vpn_//;s/_/\./g' <<< "${wg_0}")"
         ip route flush "${ip_flush}" 
         _logger "flushed vpn ${ip_flush} from routing table"
    fi

# add anything else such stopping applications and port forwarding
exit 0
