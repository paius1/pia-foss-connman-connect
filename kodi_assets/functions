#! /opt/bin/bash

# pia-foss-wireguard kodi functions
  # credentials for local kodi
    kodi_user=kodi
    kodi_pass=
    kodi_host=localhost
    kodi_port=8080

  #function _bash_REMATCH() { # Return specific data in matching line of
      #local output match     # command output, file, or string
      #is_SET_ "$3" \
              #&& \
                 #output="/tmp/${1##*/}-${3}"

      #if is_EXECUTABLE_ "${1%% *}"
      #then while IFS= read -r line
           #do if [[ "${line}" =~ ${2} ]]
              #then echo  "${BASH_REMATCH[1]}" \
                      #| tee -a "${output:-/dev/null}"
              #fi
          #done < <(${1})
      #elif is_FUNCTION_ "${1}"
      #then [[ "${1}" =~ ${2} ]]
           #for ((i=1;i<"${#BASH_REMATCH[@]}";i++))
           #do  echo "${BASH_REMATCH[${i}]}"
           #done
      #elif is_READABLE_ "${1}"
      #then echo -n "" > "${output:-/dev/null}"
           #while IFS= read -r line
           #do if [[ "${line}" =~ ${2} ]]
              #then echo  "${BASH_REMATCH[1]}" \
                      #| tee -a "${output:-/dev/null}"
              #fi
           #done < "${1}"
      #else [[ "${1}" =~ ${2} ]]
           #echo "${BASH_REMATCH[1]}"
      #fi
  #return 0
 #}
 #export -f _bash_REMATCH

  function _parse_JSON {
      local key=$1
      /usr/bin/awk -F"[,:}]" \
                   '{for(i=1;i<=NF;i++)
                    {if($i~/'"${key}"'\042/)
                       {print $(i+1)}}}' \
                 | tr -d '"'
 }
 export -f _parse_JSON

  function _kodi_REQ {
      /opt/bin/curl --silent -X POST --header "Content-Type: application/json" -d "$1" http://$kodi_user:$kodi_pass@$kodi_host:$kodi_port/jsonrpc
 }
 export -f _kodi_REQ

# ALL that to get to this
  function _pia_notify() {
      local message displaytime image show_image
            message="${1:-message is empty}"
            displaytime="${2:-5000}"
            image="${3:-"kodi_assets/pia_on_48x48.png"}"
            [[ -s "$(pwd)/${image}" ]] \
            && showimage=',"image":"'"$(pwd)/${image}"'"'

      status="$(_kodi_REQ ' {"jsonrpc": "2.0", "method": "GUI.ShowNotification", "params": {"title": "PIA Wireguard Connection", "message": "'"${message}"'" , "displaytime": '"${displaytime}"''"${showimage}"' }, "id": 1} ')"

      if  [[ "$status" =~ OK ]]
      then return 0
      else return 1
      fi
 }
  export -f _pia_notify


