#!/opt/bin/bash
#    v 0.0.1, c plgroves gmail 2022
#    SCRIPTNAME 
#        runs before pia-wireguard service is up
#        sets a safe and sane environment
#         e.g. delete existing vpn_
#              reset the firewall
#              set working nameservers
#              stop vpn dependent applications e.g. port_forwarding, transmission
####
# 

    _Usage() {
         sed >&2 -n "1d; /^###/q; /^#/!q; s/^#*//; s/^ //; 
                     s/SCRIPTNAME/${BASH_SOURCE##*/}/; p" \
                    "${BASH_SOURCE%/*}/${BASH_SOURCE##*/}"
         exit 1; }
    [[ "$1" =~ ^[-hH] ]] && _Usage "$@"

    function logger() {
        local message="${1}"; local source="${2:-${BASH_SOURCE}}"; local log="${3:-$LOG}"
        local tab spaces 
        tab="${TAB:-100}"
        IFS="" spaces="$(printf "%$((tab*2))s")"
        printf %s:[%s]:%.$((${tab}-${#source}))s%s%s  "$(date)" "$(cut -d- -f2- <<< "${source##*/}") " "${spaces} " "${message}" $'\n'| tee -a "${log}"
}

    log='/dev/null'
    LOG="${1:-${log}}"
    bash_source="${#BASH_SOURCE}"; export TAB=$((bash_source+1))

  # PIA's scripts are set to a relative path
    cd "${0%/*}" || exit 255

    export PATH=/opt/bin:/opt/sbin:/usr/bin:/usr/sbin

  # on SYSTEM START wait for things to settle down
  # and save a copy of /etc/resolv.conf
    if [[ "$(awk -F'.' '{print $1}' < /proc/uptime)" -lt 60 ]]
    then sleep 5
         logger "System Startup..."
         cp /etc/resolv.conf /storage/.cache/starting_resolv.conf
    fi

  # stop any VPN's previously started
    logger "Disconnecting any existing VPN"
  # Was I called outside of systemd and pia-wireguard.service is running
    if [ -z "${PRE_UP_RUN+y}" ] # not called by systemd
    then logger "${BASH_SOURCE##*/} was not started by systemd"
         if systemctl is-active --quiet pia-wireguard
         then logger "Stopping pia-wireguard.service"
              systemctl stop pia-wireguard # service is running
             # I think this is okay above will remove pia.config (./shutdown.sh)
         else logger "Removing pia.config"
              rm /storage/.config/wireguard/pia.config 2>/dev/null
         fi
   fi
#    connmanctl disconnect "$(grep VPN < <( connmanctl services) | awk '{print $NF}')"

  # Can I reach the interwebs
    if ! ping -c 1  -W 1  -q 8.8.8.8 > /dev/null 2>&1
    then echo "restoring firewall"
         # previously defined or saved firewall fallback ./openrules.v4
           if [ -z "${MY_FIREWALL}" ] && [ -f /tmp/my_firewall.v4 ]
           then MY_FIREWALL='/tmp/my_firewall.v4'
           fi
         iptables-restore < ${MY_FIREWALL:-openrules.v4}
    fi

  # can I resolve hostnames
    if ! dig +time=1 +tries=1 privateinternetaccess.com >/dev/null
    then echo "restoring DNS"
         # this is a copy of /etc/resov.conf saved at system start by pre_up.sh
         if [ -f /storage/.cache/starting_resolv.conf ]
         then cat /storage/.cache/starting_resolv.conf /etc/resolv.conf
         else logger "no preexisting resolv.conf winging it"
              # first active non vpn_ interface
                iface=$(connmanctl services | awk '/^\*/ && !/vpn_/{print $NF; exit}')
                mapfile  -d ' '  NS < <(awk -F'[=|;]' '/^Nameserver/{print $2}'  /storage/.cache/connman/"${iface}"/settings)
                nameserver="${NS[0]:-208.67. 222.222}"

    cat <<- EOF > /etc/resolv.conf
    # Generated by PIA WIREGUARD
    nameserver "${nameserver}"
EOF
         fi
    fi

  # max_timeout for systemd
    max_count=10
  # Now wait for full connection
    until ping -c 1  -W 1  -q privateinternetaccess.com > /dev/null
    do sleep 2
       # end at some point
         ((count++))
         [ "${count}" -gt "${max_count}" ] \
         && { echo "Interwebs failed"; exit 1; }
    done

  # stop portforwarding 
    pf_pids=($(pidof port_forwarding.sh))
    if [ "${#pf_pids[@]}" -ne 0 ]
    then logger "Stopping port forwarding"
         echo "${pf_pids[@]}" | xargs kill -9 >/dev/null 2>&1
    fi

################ Add other applications to stop below #################

exit 0
